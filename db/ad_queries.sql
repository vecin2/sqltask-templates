#ENTITY DEFINITION 
ed_by_keyname=SELECT ED.ID,ED.TYPE_ID,IDS.KEYNAME,ED.NAME,ED.LOGICAL_OBJ_PATH,ED.INTERFACE_PATH,ED.SUPER_ENTITY_DEFINITION FROM EVA_ENTITY_DEFINITION ED, CCADMIN_IDMAP IDS WHERE ED.ID = IDS.ID AND IDS.KEYNAME ='{}' AND IDS.KEYSET='ED'
ed_by_id=SELECT ED.ID,IDS.KEYNAME,ED.NAME,ED.LOGICAL_OBJ_PATH,ED.INTERFACE_PATH,ED.SUPER_ENTITY_DEFINITION FROM EVA_ENTITY_DEFINITION ED, CCADMIN_IDMAP IDS WHERE ED.ID = IDS.ID AND ED.ID ='{}' AND IDS.KEYSET='ED'
ed_by_keyname_n_locale= SELECT ED.ID, ED.NAME, ED.LOGICAL_OBJ_PATH, ED.INTERFACE_PATH, ED.SUPER_ENTITY_DEFINITION, ED.IS_BASIC, ED.SUPPORTS_READONLY, ED.IS_EXPANDABLE, LF1.TEXT AS DISPLAY_NAME, EC_IDS.KEYNAME AS CATEGORY_KEYNAME, LF2.TEXT AS DESCRIPTION FROM EVA_ENTITY_DEFINITION ed LEFT JOIN EVA_CATEGORY_ENTRY c ON	ed.id = c.entity_id INNER JOIN CCADMIN_IDMAP ed_ids ON	ED.ID = ed_IDS.ID AND ED_IDS.KEYSET = 'ED' INNER JOIN CCADMIN_IDMAP ec_ids ON	c.CATEGORY_ID = ec_IDS.ID  AND EC_IDS.KEYSET = 'EC' INNER JOIN LOCALISED_FIELD LF1 ON	ED.ID = LF1.OBJECT_VERSION AND LF1.OBJECT_TYPE = 'EntityDefinitionED' AND LF1.LOCALE = '{locale}' AND LF1.FIELD_NAME = 'displayName' LEFT JOIN LOCALISED_FIELD LF2 ON	ED.ID = LF2.OBJECT_VERSION AND LF2.OBJECT_TYPE = 'EntityDefinitionED' AND LF2.LOCALE = '{locale}' AND LF2.FIELD_NAME = 'description' WHERE ED_IDS.KEYNAME = '{keyname}'
	
all_ed=SELECT * FROM EVA_ENTITY_DEFINITION
#CATEGORY
category_by_keyname=SELECT IDMAP.KEYNAME,C.SYSTEM_NAME FROM EVA_CATEGORY C, CCADMIN_IDMAP IDMAP WHERE IDMAP.ID = C.ID AND IDMAP.KEYSET ='EC' AND IDMAP.ID =@EC.{}

#VERB 
verbs_by_ed=SELECT V.NAME,IDMAP.KEYNAME FROM EVA_VERB V, CCADMIN_IDMAP IDMAP where V.ENTITY_DEF_ID = @ED.{} AND IDMAP.KEYSET='V' AND IDMAP.ID =V.ID;
v_names_by_ed=SELECT V.NAME, ID.KEYNAME FROM EVA_VERB V, CCADMIN_IDMAP ID WHERE v.id = id.id AND id.keyset ='V' and  V.ENTITY_DEF_ID = @ED.{}
instance_verbs_by_ed=SELECT V.NAME,IDMAP.KEYNAME FROM EVA_VERB V, CCADMIN_IDMAP IDMAP where V.ENTITY_DEF_ID = @ED.{} AND IDMAP.KEYSET='V' AND IDMAP.ID =V.ID AND V.IS_INSTANCE ='Y';
v_names_by_et=SELECT V.NAME FROM EVA_VERB V, EVA_ENTITY_DEFINITION ED WHERE V.ENTITY_DEF_ID = ED.ID AND ED.TYPE_ID = @ET.{}
v_with_entitlements=SELECT V.NAME,IDMAP.KEYNAME FROM EVA_VERB V, CCADMIN_IDMAP IDMAP, EVA_VERB_ENTITLEMENT ve where IDMAP.KEYSET='V' AND IDMAP.ID =V.ID AND V.ID = VE.VERB_ID group by idmap.keyname,v.name;
v_with_pdr_and_pd=SELECT V.NAME,V_IDMAP.KEYNAME as V_KEYNAME, PDR_IDMAP.KEYNAME as PDR_KEYNAME, PD_IDMAP.KEYNAME as PD_KEYNAME FROM EVA_VERB V, CCADMIN_IDMAP V_IDMAP, EVA_PROCESS_DESC_REFERENCE PDR, CCADMIN_IDMAP PDR_IDMAP,EVA_PROCESS_DESCRIPTOR PD, CCADMIN_IDMAP PD_IDMAP where V.ENTITY_DEF_ID = @ED.{} AND V_IDMAP.KEYSET='V' AND V_IDMAP.ID =V.ID AND V.PROCESS_DESC_REF_ID = PDR.ID AND PDR_IDMAP.KEYSET='PDR' AND PDR_IDMAP.ID =PDR.ID AND PDR.PROCESS_DESCRIPTOR_ID =PD.ID AND PD_IDMAP.KEYSET='PD' AND PD_IDMAP.ID =PD.ID;
v_names_by_pdr=SELECT V.NAME FROM EVA_VERB V  where  V.PROCESS_DESC_REF_ID = @PDR.{};
v_by_keyname=SELECT V.ID as verb_ID, v.NAME as verb_name, V.IS_INSTANCE, V.IS_INSTANCE_DEFAULT as IS_DFLT,v.IS_USER_VISIBLE from EVA_VERB V where ID =@V.{}
#PROCESS DESCRIPTOR REFERENCE
pdr_by_keyname=SELECT PDR.ID, IDMAP.KEYNAME as PD_KEYNAME FROM EVA_PROCESS_DESC_REFERENCE PDR, CCADMIN_IDMAP IDMAP  where PDR.PROCESS_DESCRIPTOR_ID = IDMAP.ID AND IDMAP.KEYSET='PD' AND PDR.id =@PDR.{};
pdrs_by_pd=SELECT PDR.ID FROM EVA_PROCESS_DESC_REFERENCE PDR WHERE PDR.PROCESS_DESCRIPTOR_ID=@PD.{};

#PROCESS DESCRIPTOR 
pd_by_ed_n_vname=SELECT PDR.ID, PD.NAME as PD_NAME,PD.CONFIG_PROCESS_ID,PD.TYPE as PD_TYPE,PDR.CONFIG_ID as PDR_CONFIG_ID, PDR.CONFIG_TYPE_ID as PDR_CONFIG_TYPE_ID, PD.REPOSITORY_PATH  FROM EVA_VERB V INNER JOIN EVA_PROCESS_DESC_REFERENCE PDR ON V.PROCESS_DESC_REF_ID =PDR.ID INNER JOIN EVA_PROCESS_DESCRIPTOR PD ON PDR.PROCESS_DESCRIPTOR_ID =PD.ID INNER JOIN CCADMIN_IDMAP IDMAP ON IDMAP.ID =V.ENTITY_DEF_ID LEFT JOIN CCADMIN_IDMAP ID_ET ON PDR.CONFIG_TYPE_ID =ID_ET.ID and IDMAP.keyset='ET' WHERE  IDMAP.KEYSET ='ED' AND IDMAP.KEYNAME = '{}' AND V.NAME ='{}';
pd_by_v_keyname=SELECT PDR.ID, PD.NAME AS PD_NAME, PD.CONFIG_PROCESS_ID, PD.TYPE AS PD_TYPE, PDR.CONFIG_ID AS PDR_CONFIG_ID, PDR.CONFIG_TYPE_ID AS PDR_CONFIG_TYPE_ID, PD.REPOSITORY_PATH FROM EVA_VERB V INNER JOIN EVA_PROCESS_DESC_REFERENCE PDR ON V.PROCESS_DESC_REF_ID = PDR.ID INNER JOIN EVA_PROCESS_DESCRIPTOR PD ON PDR.PROCESS_DESCRIPTOR_ID = PD.ID WHERE V.ID =@V.{}
pd_by_repo_path=SELECT PDR.ID, PD.NAME AS PD_NAME, PD.CONFIG_PROCESS_ID, PD.TYPE AS PD_TYPE, PDR.CONFIG_ID AS PDR_CONFIG_ID, PDR.CONFIG_TYPE_ID  AS PDR_CONFIG_TYPE_ID, PD.REPOSITORY_PATH FROM EVA_VERB V INNER JOIN EVA_PROCESS_DESC_REFERENCE PDR ON V.PROCESS_DESC_REF_ID = PDR.ID INNER JOIN EVA_PROCESS_DESCRIPTOR PD ON	PDR.PROCESS_DESCRIPTOR_ID = PD.ID WHERE V.ID = @V.{}
pd_by_keyname=SELECT PD.ID,PD.NAME, PD.CONFIG_PROCESS_ID,PD.REPOSITORY_PATH FROM EVA_PROCESS_DESCRIPTOR PD where ID = @PD.{}
#AUX VERBS 
av_topseq_by_pers_keyname=SELECT SEQUENCE_NUM FROM FD_ENTITY__AUX_VERBS AV, CCADMIN_IDMAP IDMAP WHERE IDMAP.KEYNAME ='{}' AND IDMAP.KEYSET = 'PPTIVE' AND ENTITY_ID = IDMAP.ID ORDER BY SEQUENCE_NUM DESC


#PERSPECTIVE
v_by_pers_keyname=SELECT l.text as DISPLAY_NAME, cv.SEQUENCE_NUMBER, et_ids.keyname as ET_KEYNAME, CV.VERB FROM EVA_CONTEXT_VERB_ENTRY cv, EVA_ENTITY_DEFINITION ed, eva_verb v, LOCALISED_FIELD l, CCADMIN_IDMAP	et_ids where cv.ENTITY_def_type_id =ed.type_id and v.entity_def_id =ed.id and v.name =cv.verb and l.object_version = v.id and l.object_type='VerbED' and cv.config_id =@CC.{} and l.locale ='en-GB' and l.field_name ='displayName' and l.is_deleted ='N' and et_ids.id = cv.ENTITY_DEF_TYPE_ID and et_ids.keyset='ET' order by cv.SEQUENCE_NUMBER, DISPLAY_NAME
perspectives_by_profile=SELECT * FROM FD_PROFILE_TYPE_PERSPECTIVE WHERE PROFILE_ID=@PROFILE.{} order by SEQ_NO desc
#AGENT
all_agents=SELECT KEYNAME,u.USERNAME,FULLNAME,DISABLED,EXPIRES FROM AGENT a INNER JOIN FU_USER u ON a.USERNAME  = u.USERNAME INNER JOIN CE_AGENT ca ON u.ID = ca.USER_ID INNER JOIN CCADMIN_IDMAP ci ON ci.ID =ca.ID  AND ci.KEYSET ='PERSON'

#USERS
all_users=SELECT a.user_id,a.id as agent_id,u.username FROM FU_USER u, CE_AGENT a WHERE u.id =a.user_id
user_profiles=SELECT fu.USERNAME, IDS.ID, IDS.KEYNAME AS profile_keyname FROM FU_USER fu INNER join FD_USER_PROFILE_TYPE fupt ON fu.id = fupt.USER_ID INNER JOIN CCADMIN_IDMAP IDS ON fupt.PROFILE_TYPE_ID = IDS.ID AND IDS.KEYSET ='PROFILE' where fu.USERNAME ='{}'

#ENTITLEMENTS
all_entitlements=SELECT idmap.ID, idmap.KEYNAME,SYSTEM_NAME FROM EVA_ENTITLEMENT e, CCADMIN_IDMAP idmap where e.id =idmap.id and idmap.keyset ='ENTLMNT'
entity_entitlements=SELECT idmap.ID, idmap.KEYNAME,SYSTEM_NAME FROM EVA_ENTITLEMENT e, CCADMIN_IDMAP idmap, EVA_ENTITY__ENTITLEMENT ee where e.id =idmap.id and idmap.keyset ='ENTLMNT' and e.ID = ee.ENTITLEMENT_ID and ee.ENTITY_TYPE_ID={} and ee.ENTITY_ID={}
verb_entitlements=SELECT IDMAP.KEYNAME FROM CCADMIN_IDMAP IDMAP, EVA_VERB_ENTITLEMENT ve where IDMAP.KEYSET='ENTLMNT' AND IDMAP.ID =ve.ENTITLEMENT_ID and ve.VERB_ID=@V.{}

#PROFILE
all_active_profiles=SELECT ci.KEYNAME, fpt.DESKTOP_PROCESS ,fpt.NAME,fpt.IS_DELETED  FROM FD_PROFILE_TYPE fpt INNER JOIN CCADMIN_IDMAP ci ON ci.KEYSET ='PROFILE' and fpt.ID  =ci.ID WHERE fpt.IS_DELETED  ='N';
#CCADMIN_VERSION
all_releases=SELECT * FROM CCADMIN_VERSION

#CCADMIN_IDMAP/KEYNAMES
all_keysets=SELECT keyset FROM CCADMIN_IDMAP group by keyset
keynames_by_keyset=SELECT * FROM CCADMIN_IDMAP where keyset ='{}'
#WORK_AREAS
all_work_areas=SELECT * FROM FD_WORK_AREA

#DYNAMIC_ENTITY_DEFINTIONS
all_dynamic_eds=SELECT ci.KEYNAME , eed.id, eed.NAME FROM EVA_ENTITY_DEFINITION eed INNER JOIN EVA_DYNAMIC_ENTITY_DEF eded ON eed.ID =eded.ID AND eed.ENV_ID = eded.ENV_ID  AND eed.RELEASE_ID = eded.RELEASE_ID INNER JOIN CCADMIN_IDMAP ci ON eed.id = ci.ID  AND ci.KEYSET ='ED' WHERE eed.IS_DELETED  ='N'

# DYNAMIC_ENTITY_VIEWS
dynamic_views_by_ed=SELECT ci.KEYNAME,v.NAME  FROM EVA_DYNAMIC_ENTITY_VIEW v INNER JOIN CCADMIN_IDMAP ci ON v.ID  = ci.ID  AND ci.KEYSET ='DEV' WHERE ENTITY_DEF_ID =@ED.{}

# DYNAMIC_ENTITY_VIEW_FIELDS
dynamic_view_fields_by_view=SELECT ci.KEYNAME, f.VIEW_FIELD_SEQUENCE, f.SHOW_LABEL, g.GROUP_NAME FROM EVA_DYNAMIC_ENTITY_VIEW_FIELD f INNER JOIN CCADMIN_IDMAP ci ON ci.KEYSET ='EDEVF' AND ci.ID =f.ID INNER JOIN EVA_DYNAMIC_ENTITY_VIEW_GROUP g ON f.GROUP_ID = g.ID WHERE f.DYN_ENTITY_VIEW_ID = @DEV.{} order by VIEW_FIELD_SEQUENCE;

#DYNAMIC_VIEW_TYPES
all_dynamic_view_types=SELECT cc.ID,cc.keyname FROM EVA_DYNAMIC_ENTITY_VIEW_TYPE vt, CCADMIN_IDMAP cc where vt.ENTITY_DEFINITION_TYPE_ID = cc.ID and cc.keyset='ET'
views_by_ed=SELECT CC.keyname, V.NAME FROM EVA_DYNAMIC_ENTITY_VIEW v, CCADMIN_IDMAP cc where v.ID = cc.id and cc.keyset = 'DEV' and v.ENTITY_DEF_ID =@ED.{}

#DYNAMIC_VIEW_FIELDS
fields_by_ed=SELECT f.NAME, cc.KEYNAME FROM EVA_DYNAMIC_ENTITY_FIELD f, CCADMIN_IDMAP cc where f.id = cc.id and cc.keyset= 'EDEF' and ENTITY_DEF_ID = @ED.{}
fields_by_ed_names= SELECT distinct edef.NAME FROM EVA_DYNAMIC_ENTITY_FIELD edef INNER JOIN EVA_ENTITY_DEFINITION eed ON edef.ENTITY_DEF_ID = eed.ID WHERE eed.NAME IN ({})
all_property_types=SELECT cc.KEYNAME FROM eva_entity_definition  ed, CCADMIN_IDMAP cc where cc.id =ed.TYPE_ID and name like '%Properties%' 
all_field_pds=SELECT pd.REPOSITORY_PATH, cc.keyname FROM EVA_PROCESS_DESCRIPTOR pd, CCADMIN_IDMAP cc where  pd.id = cc.id and cc.keyset='PD'
and TYPE =@PDT.Field
view_fields_by_view=SELECT VIEW_FIELD_SEQUENCE FROM EVA_DYNAMIC_ENTITY_VIEW_FIELD where DYN_ENTITY_VIEW_ID=@DEV.{} order by VIEW_FIELD_SEQUENCE desc
view_groups=SELECT cc.*,g.GROUP_NAME FROM CCADMIN_IDMAP cc, EVA_DYNAMIC_ENTITY_VIEW_GROUP g where g.id = cc.id and keyset ='EDEVG' and view_id = @DEV.{};

#TAGS
tags_by_parent_keyname=SELECT name FROM eva_tag where parent_tag =@TAG.{} and is_deleted ='N' and is_retired ='N';
tagset_names=SELECT NAME FROM EVA_TAG et WHERE PARENT_TAG IS null
# DYNAMIC VERB LIST
edvl_by_type_id=SELECT idmap.keyname as edvl_keyname, idmap2.keyname || edvl.VERB_NAME as entity_Verb FROM CCADMIN_IDMAP IDMAP, CCADMIN_IDMAP IDMAP2, EVA_DYNAMIC_VERB_LIST EDVL WHERE idmap.KEYSET ='EDVL' AND  EDVL.ID = IDMAP.ID and IDMAP2.id = edvl.ENTITY_TYPE_ID and idmap2.keyset ='ET' AND edvl.TYPE_ID=@EDVLT.{};

#BACKGROUND_VERBS
bv_keynames_by_profile=SELECT entity_id, idmap.keyname  as BV_KEYNAME, BACKGROUND_VERB_ID FROM FA_ENTITY__BACKGROUND_VERB ebv, CCADMIN_IDMAP idmap where idmap.id = BACKGROUND_VERB_ID and idmap.KEYSET ='BV' and ENTITY_TYPE_ID = @ET.ProfileType and ENTITY_ID = @PROFILE.{};

#LOCALISED_FIELD
lf_object_types=SELECT OBJECT_TYPE FROM LOCALISED_FIELD GROUP BY OBJECT_TYPE ORDER BY OBJECT_TYPE;
lf_object_instances_by_ot=SELECT OBJECT_TYPE,OBJECT_INSTANCE  FROM LOCALISED_FIELD GROUP BY OBJECT_TYPE,OBJECT_INSTANCE HAVING OBJECT_TYPE='{}'; 
lf_field_names_by_ot_and_oi=SELECT OBJECT_TYPE,OBJECT_INSTANCE,FIELD_NAME  FROM LOCALISED_FIELD GROUP BY OBJECT_TYPE,OBJECT_INSTANCE,FIELD_NAME HAVING OBJECT_TYPE='{}' AND OBJECT_INSTANCE='{}';

#DB METADATA
table_metadata=SELECT TABLE_NAME, COLUMN_NAME, DATA_TYPE, DATA_LENGTH FROM USER_TAB_COLUMNS WHERE TABLE_NAME = '{}';

#TABS
ad_right_panel_verbs=SELECT ed.name as entity_def_name, v.name as verb_name, idmap.keyname as verb_keyname, pd.repository_path, v.IS_INSTANCE, v.IS_USER_VISIBLE, v.RECORD_FOR_WRAPUP FROM FD_ENTITY__AUX_VERBS eav, eva_verb v, EVA_PROCESS_DESCRIPTOR pd, EVA_PROCESS_DESC_REFERENCE pdr, EVA_ENTITY_DEFINITION ed, CCADMIN_IDMAP idmap where eav.AUXILIARY_VERB_ID = v.id and v.PROCESS_DESC_REF_ID = pdr.id and v.ENTITY_DEF_ID = ed.id and v.id = idmap.id and idmap.keyset ='V' and pdr.process_descriptor_id =pd.id and ENTITY_ID = @PPTIVE.{} 

#LOCALE
locale_by_name=SELECT * FROM EVA_LOCALE WHERE name = '{}'
